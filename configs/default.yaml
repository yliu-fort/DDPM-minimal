# Run & Environment
run:
  experiment_name: "ddpm_demo"
  output_dir: "runs"               # TensorBoard and checkpoint folder
  seed: 42
  device: "auto"                   # "auto"|"cpu"|"cuda"
  cudnn:
    benchmark: false
    deterministic: true

# Dataset
# Dataset generation
data:
  name: "gmm"                       # "gmm" | "ring" | "concentric" | "two_moons" | "swiss_roll2d" | "spiral" | "checkerboard" | "pinwheel"
  num_samples: 10000
  batch_size: 512
  num_workers: 0
  cfg:
    gmm:
      num_modes: 8
      radius: 4.0
      mode_std: 0.15
      noise_std: 0.0
    ring:
      radius: 4.0
      radial_std: 0.05
      noise_std: 0.0
    concentric:
      num_rings: 3
      r_min: 1.0
      r_max: 4.0
      per_ring_balance: True  # balance samples across rings
      noise_std: 0.02
    two_moons:
      radius: 1.0
      width: 0.3           # vertical offset between two moons
      gap: 0.0             # horizontal gap between two moons
      noise_std: 0.05
    swiss_roll2d:
      turns: 3.0                 # controls t range
      height: 5.0                # z range [-height, height]
      noise_std: 0.05
    spiral:
      arms: 2
      turns: 2.0          # number of spiral turns
      a:  0.2              # radial scale r = a * theta
      noise_std: 0.05
    checkerboard:
      x_range: [-2.0, 2.0]
      y_range:  [-2.0, 2.0]
      cells: 4               # number of cells per axis
      jitter: 0.05         # local noise inside a cell
      noise_std: 0.0       # global noise after composing
    pinwheel:
      arms: 5
      radial_std: 0.3
      tangential_std: 0.05
      rate: 0.25          # rotation rate (controls how much twist increases with radius)
      noise_std: 0.0

# Diffusion（DDPM）
diffusion:
  timesteps: 200
  beta_schedule: "linear"           # "linear" | "cosine"
  beta_start: 1.0e-4
  beta_end: 2.0e-2

# Model
model:
  name: "mlp_residual"              # mlp_baseline | mlp_residual | timm_mlp | diffusers_unet1d
  common:
    input_dim: 2
    time_embed_dim: 32
  mlp_baseline:
    hidden_dim: 128
    num_layers: 3
  mlp_residual:
    hidden_dim: 128
    num_layers: 3
    dropout: 0.0
  timm_mlp:
    hidden_dim: 128
    num_layers: 2
    dropout: 0.0
  diffusers_unet1d:
    base_channels: 32
    layers_per_block: 2
    down_block_types: ["DownBlock1D", "DownBlock1D"]
    up_block_types: ["UpBlock1D", "UpBlock1D"]
    seq_len: 32

# Train
train:
  epochs: 100
  lr: 1.0e-3
  weight_decay: 0.0
  grad_clip: 1.0
  log_interval: 50
  ckpt_interval: 10
  sample_interval: 5
  sample_size: 2048
  checkpoint_dir: "runs/checkpoints"   # where to save
  save_every_steps: 1000               # autosave cadence
  keep_last_k: 3                       # how many checkpoints to retain
  resume_from: "latest"                # "", path/to/ckpt.pt, or "latest"
  save_best_on: "val_loss"             # (TODO) metric name in your eval dict
  save_rng_state: true                 # restore RNG for exact reproducibility
  warmup: 50
  ema_decay: 0.5

# Tracking & Logging
tracking:
  tensorboard: true
  mlflow:
    enabled: false
    tracking_uri: "file:./mlruns"
    experiment_name: "ddpm_demo"
